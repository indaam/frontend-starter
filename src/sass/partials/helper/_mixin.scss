
/*
|--------------------------------------------------------------------------
| Function Percent
|--------------------------------------------------------------------------
*/
	@function percent($width, $parent){
	  @return $width*100 / $parent * 1%;
	}

/*
|--------------------------------------------------------------------------
| Function Square
|--------------------------------------------------------------------------
*/
	@function square($nilai){
		@return $nilai*2;
	}


/*
|--------------------------------------------------------------------------
| Mixin Font Face 
|--------------------------------------------------------------------------
*/
	@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
		@font-face {
			font-family: $font-family;
				src: url('#{$file-path}.eot');
				src: url('#{$file-path}.eot?#iefix') format('embedded-opentype'),
					url('#{$file-path}.woff') format('woff'),
					url('#{$file-path}.ttf') format('truetype'),
					url('#{$file-path}.svg##{$font-family}') format('svg');
			font-weight: $weight;
			font-style: $style;
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Clearfix
|--------------------------------------------------------------------------
*/
	@mixin clearfix{
		&:before,
		&:after {
			content: "";
			display: table;
		}

		&:after {
			clear: both;
		}
		*zoom: 1; // IE < 8
	}

	@mixin cf{
		@include clearfix;
	}

/*
|--------------------------------------------------------------------------
| Mixin Font Weight 
|--------------------------------------------------------------------------
*/
	@mixin font-weight( $weight) {
		@if $weight == thin {
			font-weight: 100;
		}
		@else if $weight == extra-light {
			font-weight: 200;
		}
		@else if $weight == light {
			font-weight: 300;
		}
		@else if $weight == book {
			font-weight: 400;
		}
		@else if $weight == normal {
			font-weight: 400;
		}
		@else if $weight == regular {
			font-weight: 400;
		}
		@else if $weight == medium {
			font-weight: 500;
		}
		@else if $weight == demi-bold {
			font-weight: 600;
		}
		@else if $weight == semibold {
			font-weight: 600;
		}
		@else if $weight == bold {
			font-weight: 700;
		}
		@else if $weight == extraBold {
			font-weight: 800;
		}
		@else if $weight == heavy {
			font-weight: 800;
		}
		@else if $weight == black {
			font-weight: 900;
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Center Element
|--------------------------------------------------------------------------
*/
	@mixin center-block($width: false) {
		display: block;
		margin-left: auto;
		margin-right: auto;
		@if($width){
			width: $width;
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Absolute Center
|--------------------------------------------------------------------------
*/
	@mixin absolute-center( $width:auto ){
		width: $width;
		position: absolute;
		left: 50%;
		@if $width == auto {
			margin-left: -50%;
		}@else{
			margin-left: -1 * ( $width/2 ); 
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Absolute Center Two
|--------------------------------------------------------------------------
*/
	@mixin absolute-center-two( $width:auto ){
		position: absolute;
		left: 0;
		right: 0;
		margin-left: auto;
		margin-right: auto;
		width: $width;
	}

/*
|--------------------------------------------------------------------------
| Mixin Sizing shortcuts
|--------------------------------------------------------------------------
*/
	@mixin size($width, $height) {
		width: $width;
		height: $height;
	}
	@mixin square($size) {
		@include size($size, $size);
	}

/*
|--------------------------------------------------------------------------
| Mixin Tab Focus
|--------------------------------------------------------------------------
*/
@mixin tab-focus() {
	// Default
	outline: thin dotted;
	// WebKit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}


// Font-size px + rem
// ------------------
@mixin font-size( $size, $is-important: false, $font-size: $base-font-size / 1px ) {
	
	$size: if( unitless( $size ), $size, $size / 1px );

	@if $is-important {
		font-size: $size + px !important;
		font-size: ( $size / $font-size ) + rem !important;
	} @else {
		font-size: $size + px;
		font-size: ( $size / $font-size ) + rem;
	}
	line-height: ceil( $size / $base-line-height ) * ( $base-line-height / $size );
}

/*
|--------------------------------------------------------------------------
| Mixin Triangel
|--------------------------------------------------------------------------
*/
	@mixin triangel(
		$position, // Use top | right | bottom | left
		$color,
		$width: false,
		$width-tri:false
		 ){

		position: relative;
		&:before{
			@include square(0 );
			content: "";
			position: absolute;

			@if $position == top{
				border: $width solid transparent;
				#{$position}: -1 * ( $width + $width-tri );
				border-bottom-color: $color;
				border-bottom-width: $width-tri;
			}
			@if $position == right{
				border: $width solid transparent;
				#{$position}: -1 * ( $width + $width-tri );
				border-left-color: $color;
				border-left-width: $width-tri;
			}
			@if $position == bottom{
				border: $width solid transparent;
				#{$position}: -1 * ( $width + $width-tri );
				border-top-color: $color;
				border-top-width: $width-tri;
			}
			@if $position == left{
				border: $width solid transparent;
				#{$position}: -1 * ( $width + $width-tri );
 				border-right-color: $color;
				border-right-width: $width-tri;
			}
		}
	}
 
/*
|--------------------------------------------------------------------------
| Mixin Hide Text
|--------------------------------------------------------------------------
*/
	@mixin hide-text() {
		font: #{0/0} a;
		color: transparent;
		text-shadow: none;
		background-color: transparent;
		border: 0;
	}

	@mixin text-hide() {
		@include hide-text;
	}

/*
|--------------------------------------------------------------------------
| Mixin Media Query
|--------------------------------------------------------------------------
*/
	@mixin mobile($width:false){
		@if ($width){
			@media screen and (max-width:#{$width}) { @content;}
		}@else{
			@media screen and (max-width:640px) { @content;}
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Media Print
|--------------------------------------------------------------------------
*/
	@mixin print{
		@media print{ @content;}
	}

/*
|--------------------------------------------------------------------------
| Mixin IE 
|--------------------------------------------------------------------------
*/
	@mixin ie($version:false){
		@if($version){
			.ie#{$version} &{
				@content;
			}
		} @else {
			.lt-ie9 &{
				@content;
			}
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Keyframes
|--------------------------------------------------------------------------
*/
	@mixin keyframes($name) {
		@-webkit-keyframes #{$name} {
			@content; 
		}
		@-moz-keyframes #{$name} {
			@content;
		}
		@-ms-keyframes #{$name} {
			@content;
		}
		@keyframes #{$name} {
			@content;
		} 
	}

/*
|--------------------------------------------------------------------------
| Mixin Selection
|--------------------------------------------------------------------------
*/
	@mixin selection($background, $color, $element:false) {
		@if($element) {
			&::-moz-selection{ background:$background; color:$color; text-shadow:none; }
			&::selection { background:$background; color:$color; text-shadow:none; }
		} @else {
			::-moz-selection{ background:$background; color:$color; text-shadow:none; }
			::selection { background:$background; color:$color; text-shadow:none; }
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Reset Float
|--------------------------------------------------------------------------
*/
	@mixin reset-float {
		float: none;
		width: auto;
		display: block;
	}

/*
|--------------------------------------------------------------------------
| Mixin Reset List 
|--------------------------------------------------------------------------
*/
	@mixin reset-list{
		margin: 0;
		padding: 0;
		list-style-type: none;
	}

/*
|--------------------------------------------------------------------------
| Mixin Browser
|--------------------------------------------------------------------------
*/
	@mixin webkit{
		@media screen and (-webkit-min-device-pixel-ratio:0) {
			@content;
		}
	}
	@mixin chrome{
		@media not all and (-webkit-min-device-pixel-ratio:0) {
			@content;
		}
	}
	@mixin opera{
		@media not screen and (1){
			@content;
		}
	}
	@mixin firefox{
		@media screen and (min--moz-device-pixel-ratio:0){
			@content;
		}
	}
	@mixin ie7{ // ≤ 7
		html > body &{
			@content;
		}
	}
	@mixin ie8{ // ≤8
		body:last-child &{
			@content;
		}
	}
	@mixin ie82{ // ≤8
		_::selection, .selector:not([attr*='']){
			@content;
		}
	}
	@mixin ie9{ // ≤9
		html[lang='\en'] & {
			@content;
		}
	}
	@mixin ie10{ // ≥ 10
		_:-ms-input-placeholder, :root & {
			@content;
		}
	}
	@mixin ie11{ // ≥ 11
		_:-ms-fullscreen, :root &{
			@content;
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Float
|--------------------------------------------------------------------------
*/
	@mixin fl{ @include float(left);}
	@mixin fr{ @include float(right);}

/*
|--------------------------------------------------------------------------
| Mixin Absolute Block
|--------------------------------------------------------------------------
*/
	@mixin absolute-block($size: false){
		position: absolute;
		left: 0;
		top: 0;
		@if ($size){
			width: 100%;
			height: 100%;
		}@else{
			bottom: 0;
			right: 0;
		}
	}

/*
|--------------------------------------------------------------------------
| Mixin Percent width
|--------------------------------------------------------------------------
*/
	@mixin percent($cols){
		width: 100% / $cols;
	}

/*
|--------------------------------------------------------------------------
| Mixin Placeholder
|--------------------------------------------------------------------------
*/
	@mixin placeholder {
		&::-webkit-input-placeholder {@content}
		&:-moz-placeholder           {@content}
		&::-moz-placeholder          {@content}
		&:-ms-input-placeholder      {@content}  
	}

	// @mixin animation($animation...) {
	//   $animation: if(length($animation) > 0, $animation, default-animation());
	//   @include animation-properties((animation: $animation));
	// }

	@function strip-unit($num) {
		@return $num / ($num * 0 + 1);
	}

/*
|--------------------------------------------------------------------------
| Mixin remsize
|--------------------------------------------------------------------------
*/
	@mixin remsize($property, $values...) {
		$max: length($values);
		$pxValues: '';
		$remValues: '';

		@for $i from 1 through $max {
			$value: strip-unit(nth($values, $i));
			$pxValues: #{$pxValues + $value*16}px;

			@if $i < $max {
				$pxValues: #{$pxValues + " "};
			}
		} 

		@for $i from 1 through $max {
			$value: strip-unit(nth($values, $i));
			$remValues: #{$remValues + $value}rem;

			@if $i < $max {
				$remValues: #{$remValues + " "};
			}
		} 

		#{$property}: $pxValues; 
		#{$property}: $remValues; 
	}



	/// Remove the unit of a length
	/// @param {Number} $number - Number to remove unit from
	/// @return {Number} - Unitless number
	@function strip-unit($number) {
		@if type-of($number) == 'number' and not unitless($number) {
			@return $number / ($number * 0 + 1);
		}

		@return $number;
	}

/*
|--------------------------------------------------------------------------
| Font size to rem
|--------------------------------------------------------------------------
*/
	@mixin fz($val){
		font-size: $val;
		font-size: (strip-unit($val) * 1) /strip-unit($base-font-size)+rem;
	}

/*
|--------------------------------------------------------------------------
| Property then value to rem
|--------------------------------------------------------------------------
*/
	@mixin torm($prop, $val){
		$r: (strip-unit($val) * 1) /strip-unit($base-font-size)+rem;
		#{$prop}: $val;
		#{$prop}: $r;
	}